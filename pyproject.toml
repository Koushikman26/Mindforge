[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mindforge"
version = "1.1.0"
description = "AI-powered stock analysis system with advanced image processing capabilities"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Mindforge Team", email = "team@mindforge.ai" }
]
maintainers = [
    { name = "Mindforge Team", email = "team@mindforge.ai" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing"
]
requires-python = ">=3.11"

dependencies = [
    # Web framework
    "fastapi==0.112.2",
    "uvicorn[standard]==0.30.6",
    "aiofiles==24.1.0",
    "aiohttp>=3.8.0",
    "python-multipart>=0.0.6",

    # Image processing (pinned for compatibility)
    "opencv-python==4.8.1.78",
    "opencv-contrib-python==4.8.1.78",
    "scikit-image==0.21.0",
    "scipy==1.11.3",
    "Pillow==10.0.1",
    "imutils==0.5.4",
    "albumentations==1.3.1",

    # Data processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "tqdm>=4.65.0",

    # Configuration
    "pydantic>=2.0.0",
    "pydantic-settings>=2.4.0",
    "python-dotenv>=1.0.0",
    "PyYAML>=6.0.1",

    # Visualization
    "matplotlib==3.7.2",
    "seaborn>=0.12.0",

    # HTTP client
    "requests>=2.31.0",

    # Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
]

[project.optional-dependencies]
ml = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "tensorflow>=2.13.0",
    "ultralytics>=8.0.147",
]

dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "ipython>=8.17.0",
    "jupyter>=1.0.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
"Homepage" = "https://github.com/Koushikman26/Mindforge"
"Bug Reports" = "https://github.com/Koushikman26/Mindforge/issues"
"Source" = "https://github.com/Koushikman26/Mindforge"
"Documentation" = "https://github.com/Koushikman26/Mindforge/docs"

[project.scripts]
mindforge = "app.main:main"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["app", "app.ai_engine", "app.core"]

[tool.setuptools.package-data]
"app" = ["*.yaml", "*.yml", "*.json"]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["S101"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=app",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "image_processing: marks tests as image processing tests",
    "asyncio: marks tests as async tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | \.venv
  | venv
  | __pycache__
)/
'''