name: CI Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check app --exit-zero

      - name: Run tests
        shell: bash
        run: |
          pip install pytest >/dev/null 2>&1 || true
          if [ -d "tests" ]; then
            pytest -q
          else
            python -c 'print("No tests yet - add pytest later.")'
          fi

      - name: Build Docker image
        run: docker build -t hello-world-app:ci .

  publish:
    name: Publish Docker image
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/hello-world-app
        shell: bash
        run: |
          TAG=${GITHUB_SHA:0:7}
          echo "Building image: $IMAGE:$TAG"
          docker build -t "$IMAGE:$TAG" -t "$IMAGE:latest" .
          docker push "$IMAGE:$TAG"
          docker push "$IMAGE:latest"
          echo "Image pushed successfully."
